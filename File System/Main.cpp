#include<iostream>
#include<string>
#include<fstream> // file sream (файловый поток) - подключение библиотеки, содержащей в себе объекты и классы для работы
// с файловой системой устройства
// ofstream - поток вывода в файл
// ifsream - поток ввода из файла
// Модуль 8. Занятие 59. Начало работы с файловой системой компьютера

// Прототип функции Задачи 1:
bool statistic(std::string str);


int main() {
	setlocale(LC_ALL, "RU");
	int n;
	std::string path = "file.txt";

	// класс ofstream для записи в файл:
	/*
	std::ofstream out;	// объявление объекта записи в файл
	out.open(path, std::ios::app);		// открытие файла. Создает файл, если его не существет.
	// нужно проверить открыт ли файл file.txt:
	if (out.is_open()) {
		std::cout << "Файл открыт для записи\n";
		std::string str;
		std::cout << "Введите строку -> ";
		std::getline(std::cin, str);
		out << str << "\n";		// команда вывода строки из файла, также добавляем "\n" по правилам хорошего тона
	}
	else {
		std::cout << "Ошибка открытия файла!\n";
		// Возможные причины ошибки при открытии файла для записи:
		// 1. Некорректный путь к файлу;
		// 2. Нет доступа к файлу;
		// 3. Файл открыт другим объектом или программой.
	}

	out.close();	// закрытие файла
	*/

	// класс ifstream для чтения из файла:
	/*
	std::ifstream in;
	in.open(path);

	if (in.is_open()) {
		std::cout << "Файл открыт. Содежимое файла:\n";
		std::string file;

		// Виды считывания
		// Посимвольное считывание:
		//char sym;	// необходима переменная типа char
		//while (in.get(sym)) {	// get считывает символ там где находится курсор в файле
		//	file += sym;		// добавляем каждый символ
		//}
		//std::cout << file << std::endl;

		// Пословное считывание: (самое не популярное)
		//while (!in.eof()) { // пока мы не в конце файла
		//	std::string word;
		//	in >> word;
		//	file += word + '\n';
			// Разделителями считаются - пробел, табуляция, перенос строки		
		//}
		//std::cout << file << std::endl;

		// Построчное считывание:
		std::string str;
		while (std::getline(in, str)) {
			file += str + '\n';
		}
		std::cout << file << std::endl;
	}
	else {
		std::cout << "Ошибка открытия файла!\n";
		// Возможные причины ошибки при открытии файла для чтения:
		// 1. Некорректный путь к файлу;
		// 2. Файла не существует;
		// 3. Нет доступа к файлу.
	}
	in.close();*/

	// Удаление файла
	/*
	//remove(path.c_str());	// неудобно
	if (remove(path.c_str()) == 0) {
		std::cout << "Файл удален!";
	}
	else
		std::cout << "Ошибка удаления файла!";
	// Возможные ошибки при удаления файла:
	// 1. Нет доступа к файлу;
	// 2. Файла не существует;
	// 3. Файл открыт другим приложением или другим объектом;
	// 4. Не правильный путь.
	*/

	// Задача 1. Статистика в файлах
	std::cout << "Задача 1.\nВведите строку -> ";
	std::string str1;
	std::getline(std::cin, str1);
	if (statistic(str1))
		std::cout << "Запись добавлена";
	else
		std::cout << "Ошибка добавления записи";



	return 0;
}
// Функция Задачи 1:
bool statistic(std::string str) {
	static std::ofstream out;	// static - необходимо чтобы один раз запустить ofstream и потом только открывать и зыкрывать файл.
	out.open("stats.txt");

	if (out.is_open(), std::ios::app) {
		out << str << ' ' << str.length() << '\n';
		out.close();
		return true;
	}
	return false;
}